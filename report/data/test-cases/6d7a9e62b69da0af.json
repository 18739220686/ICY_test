{
  "uid" : "6d7a9e62b69da0af",
  "name" : "test_newly",
  "fullName" : "testcase.test_08.TestProcurementType#test_newly",
  "historyId" : "1b618fc3f20489e5ef94ac52379b37b0",
  "time" : {
    "start" : 1616663570636,
    "stop" : 1616663570838,
    "duration" : 202
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'list'",
  "statusTrace" : "self = <test_08.TestProcurementType object at 0x05267870>\n\n    def test_newly(self):\n        self.lab = gl.get_value('lab')\n        self.caseid = '%s-08' % (self.lab)\n        self.ip = gl.get_value('apiip')\n        self.testplanid = gl.get_value('test_plan_id')\n        self.token = gl.get_value('Cookie')\n    \n        # 测试API地址\n        self.url = '% smethod=purchasePlan.getPurchasePlanList'% (self.ip)\n    \n        self.payloadData ={\n                            \"barcode\": \"\",\n                            \"storeHouseId\": \"\",\n                            \"status\": 1,\n                            \"purchaseTypeId\": [],\n                            \"purchaseGenreId\": [],\n                            \"supplierId\": \"\",\n                            \"merchandiserId\": \"\",\n                            \"sort\": \"\",\n                            \"sortType\": \"\",\n                            \"page\": 1,\n                            \"pageSize\": 20\n                        }\n    \n        self.payloadHeader = {\n            'Content-Type': \"application/json\",\n            'Cookie': self.token\n        }\n        #打印requests\n        self.data = json.dumps(self.payloadData)\n        self.headers = self.payloadHeader\n        ul.log.logger.info(\"%s is open!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" % (self.caseid))\n    \n        r = requests.request(\"post\", url=self.url, headers=self.payloadHeader, data=self.data, verify=False)\n    \n        # 写入至yaml文件\n>       res = r.json()['data']['list'][0]\nE       KeyError: 'list'\n\ntestcase\\test_08.py:58: KeyError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'list'",
    "statusTrace" : "self = <test_08.TestProcurementType object at 0x05267870>\n\n    def test_newly(self):\n        self.lab = gl.get_value('lab')\n        self.caseid = '%s-08' % (self.lab)\n        self.ip = gl.get_value('apiip')\n        self.testplanid = gl.get_value('test_plan_id')\n        self.token = gl.get_value('Cookie')\n    \n        # 测试API地址\n        self.url = '% smethod=purchasePlan.getPurchasePlanList'% (self.ip)\n    \n        self.payloadData ={\n                            \"barcode\": \"\",\n                            \"storeHouseId\": \"\",\n                            \"status\": 1,\n                            \"purchaseTypeId\": [],\n                            \"purchaseGenreId\": [],\n                            \"supplierId\": \"\",\n                            \"merchandiserId\": \"\",\n                            \"sort\": \"\",\n                            \"sortType\": \"\",\n                            \"page\": 1,\n                            \"pageSize\": 20\n                        }\n    \n        self.payloadHeader = {\n            'Content-Type': \"application/json\",\n            'Cookie': self.token\n        }\n        #打印requests\n        self.data = json.dumps(self.payloadData)\n        self.headers = self.payloadHeader\n        ul.log.logger.info(\"%s is open!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" % (self.caseid))\n    \n        r = requests.request(\"post\", url=self.url, headers=self.payloadHeader, data=self.data, verify=False)\n    \n        # 写入至yaml文件\n>       res = r.json()['data']['list'][0]\nE       KeyError: 'list'\n\ntestcase\\test_08.py:58: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "434aaa50f9bd7d17",
      "name" : "log",
      "source" : "434aaa50f9bd7d17.txt",
      "type" : "text/plain",
      "size" : 113
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试用例08"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_08"
  }, {
    "name" : "subSuite",
    "value" : "TestProcurementType"
  }, {
    "name" : "host",
    "value" : "DESKTOP-JR3NDOU"
  }, {
    "name" : "thread",
    "value" : "211148-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_08"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "6d7a9e62b69da0af.json",
  "parameterValues" : [ ]
}