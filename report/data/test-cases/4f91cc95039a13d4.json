{
  "uid" : "4f91cc95039a13d4",
  "name" : "test_newly",
  "fullName" : "testcase.test_22.TestProcurementType#test_newly",
  "historyId" : "60950418b1ce16e104d0b61868a22992",
  "time" : {
    "start" : 1616479748812,
    "stop" : 1616479749025,
    "duration" : 213
  },
  "status" : "broken",
  "statusMessage" : "AttributeError: module 'yaml' has no attribute 'dump'",
  "statusTrace" : "self = <test_22.TestProcurementType object at 0x04229670>\n\n    def test_newly(self):\n        self.lab = gl.get_value('lab')\n        self.caseid = '%s-22' % (self.lab)\n        self.ip = gl.get_value('apiip')\n        self.testplanid = gl.get_value('test_plan_id')\n        self.token = gl.get_value('Cookie')\n    \n        # 测试API地址\n        self.url = '% smethod=finance.getAppliedSupplierIds'% (self.ip)\n        print(self.url)\n        self.payloadData ={\n                    \"month\": \"2021-03\"\n                }\n    \n        self.payloadHeader = {\n            'Content-Type': \"application/json\",\n            'Cookie': self.token\n        }\n        #打印requests\n        self.data = json.dumps(self.payloadData)\n        self.headers = self.payloadHeader\n        ul.log.logger.info(\"%s is open!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" % (self.caseid))\n    \n        r = requests.request(\"post\", url=self.url, headers=self.payloadHeader, data=self.data,verify=False)\n    \n        print(r.json())\n        ul.log.logger.info(r)\n    \n        # 断言\n        assert r.json()['result'] == 0\n    \n        # 写入至yaml文件\n        res = r.json()['data']\n        print(res)\n>       data = Con().con_write(res)  # 把字典格式的文件存入yaml文件\n\ntestcase\\test_22.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.axtr.Con object at 0x04229CF0>\ndata = {'appliedSupplierIds': ['1539844977', '1539844975']}\n\n    def con_write(self,data):\n        #写入文件allow_unicode=True返回中文格式\n        with open('send.yaml', encoding='utf-8', mode='w') as f:\n>           yaml.dump(data, stream=f, allow_unicode=True)\nE           AttributeError: module 'yaml' has no attribute 'dump'\n\ntestcase\\axtr.py:45: AttributeError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "AttributeError: module 'yaml' has no attribute 'dump'",
    "statusTrace" : "self = <test_22.TestProcurementType object at 0x04229670>\n\n    def test_newly(self):\n        self.lab = gl.get_value('lab')\n        self.caseid = '%s-22' % (self.lab)\n        self.ip = gl.get_value('apiip')\n        self.testplanid = gl.get_value('test_plan_id')\n        self.token = gl.get_value('Cookie')\n    \n        # 测试API地址\n        self.url = '% smethod=finance.getAppliedSupplierIds'% (self.ip)\n        print(self.url)\n        self.payloadData ={\n                    \"month\": \"2021-03\"\n                }\n    \n        self.payloadHeader = {\n            'Content-Type': \"application/json\",\n            'Cookie': self.token\n        }\n        #打印requests\n        self.data = json.dumps(self.payloadData)\n        self.headers = self.payloadHeader\n        ul.log.logger.info(\"%s is open!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" % (self.caseid))\n    \n        r = requests.request(\"post\", url=self.url, headers=self.payloadHeader, data=self.data,verify=False)\n    \n        print(r.json())\n        ul.log.logger.info(r)\n    \n        # 断言\n        assert r.json()['result'] == 0\n    \n        # 写入至yaml文件\n        res = r.json()['data']\n        print(res)\n>       data = Con().con_write(res)  # 把字典格式的文件存入yaml文件\n\ntestcase\\test_22.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <testcase.axtr.Con object at 0x04229CF0>\ndata = {'appliedSupplierIds': ['1539844977', '1539844975']}\n\n    def con_write(self,data):\n        #写入文件allow_unicode=True返回中文格式\n        with open('send.yaml', encoding='utf-8', mode='w') as f:\n>           yaml.dump(data, stream=f, allow_unicode=True)\nE           AttributeError: module 'yaml' has no attribute 'dump'\n\ntestcase\\axtr.py:45: AttributeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4b1ccb7c89b87d60",
      "name" : "log",
      "source" : "4b1ccb7c89b87d60.txt",
      "type" : "text/plain",
      "size" : 201
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试用例22"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_22"
  }, {
    "name" : "subSuite",
    "value" : "TestProcurementType"
  }, {
    "name" : "host",
    "value" : "DESKTOP-JR3NDOU"
  }, {
    "name" : "thread",
    "value" : "134584-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_22"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "4f91cc95039a13d4.json",
  "parameterValues" : [ ]
}