{
  "uid" : "378bbe44c1de41c8",
  "name" : "test_newly",
  "fullName" : "testcase.test_15.TestProcurementType#test_newly",
  "historyId" : "5fe638b7f66deae517520ca1c368ebcf",
  "time" : {
    "start" : 1615860547093,
    "stop" : 1615860547613,
    "duration" : 520
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 2 == 0\n  +2\n  -0",
  "statusTrace" : "self = <test_15.TestProcurementType object at 0x051E1650>\n\n    def test_newly(self):\n        self.lab = gl.get_value('lab')\n        self.caseid = '%s-15' % (self.lab)\n        self.ip = gl.get_value('apiip')\n        self.testplanid = gl.get_value('test_plan_id')\n        self.token = gl.get_value('Cookie')\n    \n        # 测试API地址\n        self.url = '% smethod=finance.createPurchasePayment'% (self.ip)\n        print(self.url)\n        self.payloadData ={\n                            \"purchaseId\": 1556274479,\n                            \"supplierName\": \"花数果（wxn测试）\",\n                            \"bank\": \"工商银行\",\n                            \"account\": \"777777777777771\",\n                            \"stage\": 1,\n                            \"purchaseAmount\": 13000,\n                            \"amount\": 7800,\n                            \"payStyle\": \"6:2:2\",\n                            \"goodsList\": [],\n                            \"contents\": [{\n                                \"status\": 1,\n                                \"disable\": False,\n                                \"amount\": 7800\n                            }, {\n                                \"status\": 2,\n                                \"disable\": False,\n                                \"amount\": 2600,\n                                \"goodsList\": [{\n                                    \"skuId\": \"1552935991\",\n                                    \"spuId\": \"1540308832\",\n                                    \"sku\": \"2051F00061W402\",\n                                    \"spu\": \"2051F00061\",\n                                    \"name\": \"春2051F00061\",\n                                    \"count\": 6,\n                                    \"actualPrice\": 1000,\n                                    \"remainCount\": 6\n                                }, {\n                                    \"skuId\": \"1552936003\",\n                                    \"spuId\": \"1540308827\",\n                                    \"sku\": \"20510H0056W482\",\n                                    \"spu\": \"20510H0056\",\n                                    \"name\": \"summer20510H0056\",\n                                    \"count\": 7,\n                                    \"actualPrice\": 1000,\n                                    \"remainCount\": 7\n                                }]\n                            }, {\n                                \"status\": 3,\n                                \"disable\": False,\n                                \"amount\": 0\n                            }],\n                            \"style\": 4\n                        }\n    \n        self.payloadHeader = {\n            'Content-Type': \"application/json\",\n            'Cookie': self.token\n        }\n        #打印requests\n        self.data = json.dumps(self.payloadData)\n        self.headers = self.payloadHeader\n        ul.log.logger.info(\"%s is open!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" % (self.caseid))\n    \n        r = requests.request(\"POST\", url=self.url, headers=self.payloadHeader, data=self.data,verify=False)\n    \n        print(r.json())\n        ul.log.logger.info(r)\n    \n        # 断言\n>       assert r.json()['result'] == 0\nE       assert 2 == 0\nE         +2\nE         -0\n\ntestcase\\test_15.py:91: AssertionError",
  "flaky" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 2 == 0\n  +2\n  -0",
    "statusTrace" : "self = <test_15.TestProcurementType object at 0x051E1650>\n\n    def test_newly(self):\n        self.lab = gl.get_value('lab')\n        self.caseid = '%s-15' % (self.lab)\n        self.ip = gl.get_value('apiip')\n        self.testplanid = gl.get_value('test_plan_id')\n        self.token = gl.get_value('Cookie')\n    \n        # 测试API地址\n        self.url = '% smethod=finance.createPurchasePayment'% (self.ip)\n        print(self.url)\n        self.payloadData ={\n                            \"purchaseId\": 1556274479,\n                            \"supplierName\": \"花数果（wxn测试）\",\n                            \"bank\": \"工商银行\",\n                            \"account\": \"777777777777771\",\n                            \"stage\": 1,\n                            \"purchaseAmount\": 13000,\n                            \"amount\": 7800,\n                            \"payStyle\": \"6:2:2\",\n                            \"goodsList\": [],\n                            \"contents\": [{\n                                \"status\": 1,\n                                \"disable\": False,\n                                \"amount\": 7800\n                            }, {\n                                \"status\": 2,\n                                \"disable\": False,\n                                \"amount\": 2600,\n                                \"goodsList\": [{\n                                    \"skuId\": \"1552935991\",\n                                    \"spuId\": \"1540308832\",\n                                    \"sku\": \"2051F00061W402\",\n                                    \"spu\": \"2051F00061\",\n                                    \"name\": \"春2051F00061\",\n                                    \"count\": 6,\n                                    \"actualPrice\": 1000,\n                                    \"remainCount\": 6\n                                }, {\n                                    \"skuId\": \"1552936003\",\n                                    \"spuId\": \"1540308827\",\n                                    \"sku\": \"20510H0056W482\",\n                                    \"spu\": \"20510H0056\",\n                                    \"name\": \"summer20510H0056\",\n                                    \"count\": 7,\n                                    \"actualPrice\": 1000,\n                                    \"remainCount\": 7\n                                }]\n                            }, {\n                                \"status\": 3,\n                                \"disable\": False,\n                                \"amount\": 0\n                            }],\n                            \"style\": 4\n                        }\n    \n        self.payloadHeader = {\n            'Content-Type': \"application/json\",\n            'Cookie': self.token\n        }\n        #打印requests\n        self.data = json.dumps(self.payloadData)\n        self.headers = self.payloadHeader\n        ul.log.logger.info(\"%s is open!~~~~~~~~~~~~~~~~~~~~~~~~~~~~\" % (self.caseid))\n    \n        r = requests.request(\"POST\", url=self.url, headers=self.payloadHeader, data=self.data,verify=False)\n    \n        print(r.json())\n        ul.log.logger.info(r)\n    \n        # 断言\n>       assert r.json()['result'] == 0\nE       assert 2 == 0\nE         +2\nE         -0\n\ntestcase\\test_15.py:91: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "149969d56872e7b7",
      "name" : "log",
      "source" : "149969d56872e7b7.txt",
      "type" : "text/plain",
      "size" : 201
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "测试用例15"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_15"
  }, {
    "name" : "subSuite",
    "value" : "TestProcurementType"
  }, {
    "name" : "host",
    "value" : "DESKTOP-JR3NDOU"
  }, {
    "name" : "thread",
    "value" : "170332-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_15"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "378bbe44c1de41c8.json",
  "parameterValues" : [ ]
}